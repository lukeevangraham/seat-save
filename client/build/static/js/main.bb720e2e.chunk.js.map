{"version":3,"sources":["hoc/Layout/Layout.js","apis/seats.js","store/actions/actionTypes.js","store/actions/index.js","components/EventTable/EventTable.js","containers/EventList/EventList.js","containers/EventCreate/EventForm/EventForm.js","containers/EventCreate/EventCreate.js","containers/EventReserve/ReserveForm/ReserveForm.js","components/GroupConfirm/GroupConfirm.js","containers/EventReserve/EventReserve.js","containers/Reservations/ReservationList.js","components/ShowGroups/ShowGroups.js","containers/Reservations/Reservations.js","App.js","store/reducers/event.js","store/reducers/group.js","store/reducers/index.js","index.js"],"names":["Layout","props","Link","component","RouterLink","to","children","axios","create","baseURL","CREATE_EVENT","FETCH_EVENTS","FETCH_EVENT","FETCH_POPULATED_EVENT","CREATE_GROUP","CREATE_GROUP_START","fetchUpcomingEvents","dispatch","a","seats","get","response","type","actionTypes","payload","data","startCreateGroup","eventTable","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","events","map","event","scope","admin","_id","eventName","Date","date","toLocaleDateString","weekday","toLocaleTimeString","timeStyle","openSpots","connect","state","useEffect","eventList","length","EventTable","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","renderDateAndTimeField","id","InputLabelProps","shrink","reduxForm","form","handleSubmit","pristine","reset","submitting","classes","onSubmit","Field","name","inputProps","Button","variant","color","created","createEvent","formValues","post","createdRedirect","Fragment","ReserveForm","min","GroupConfirm","console","log","group","groupName","groupSize","email","toLocaleString","dateStyle","onClick","window","print","fetchEvent","createGroup","match","params","renderForm","dbGroup","renderList","ShowGroups","groups","fetchPopulatedEvent","renderShowGroups","withRouter","routes","path","exact","EventList","EventCreate","EventReserve","ReservationList","Reservations","CssBaseline","Container","maxWidth","initialState","eventReducer","action","groupReducer","combineReducers","church","churchReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.bb720e2e.chunk.js","sourcesContent":["import React from \"react\";\nimport Link from \"@material-ui/core/Link\"\nimport { Link as RouterLink } from \"react-router-dom\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst Layout = (props) => (\n  <div>\n    <h1><Link component={RouterLink} to=\"/\">RB Community Church | Seat Save</Link></h1>\n    <main>{props.children}</main>\n  </div>\n);\n\nexport default Layout;\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: '/'\n})","export const CREATE_EVENT = \"CREATE_EVENT\";\nexport const FETCH_EVENTS = \"FETCH_EVENTS\";\nexport const FETCH_EVENT = \"FETCH_EVENT\";\nexport const FETCH_POPULATED_EVENT = \"FETCH_POPULATED_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\n\nexport const CREATE_GROUP = \"CREATE_GROUP\";\nexport const CREATE_GROUP_START = \"CREATE_GROUP_START\";\n","import seats from \"../../apis/seats\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const createEvent = (formValues) => async (dispatch) => {\n  const response = await seats.post(\"/event\", formValues);\n\n  dispatch({\n    type: actionTypes.CREATE_EVENT,\n    payload: response.data,\n  });\n};\n\nexport const fetchUpcomingEvents = () => async (dispatch) => {\n  const response = await seats.get(\"/event\");\n\n  dispatch({ type: actionTypes.FETCH_EVENTS, payload: response.data });\n};\n\nexport const fetchEvent = (id) => async (dispatch) => {\n  const response = await seats.get(`/event/${id}`);\n\n  dispatch({ type: actionTypes.FETCH_EVENT, payload: response.data });\n};\n\nexport const fetchPopulatedEvent = (id) => async (dispatch) => {\n  const response = await seats.get(`event/admin/${id}`)\n\n  dispatch({ type: actionTypes.FETCH_EVENTS, payload: response.data })\n}\n\nexport const createGroup = (id, formValues) => async (dispatch) => {\n  const response = await seats.post(`/group/${id}`, formValues);\n\n  dispatch({\n    type: actionTypes.CREATE_GROUP,\n    payload: response.data,\n  });\n};\n\nexport const startCreateGroup = () => {\n  return {\n    type: actionTypes.CREATE_GROUP_START,\n  };\n};\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst eventTable = (props) => (\n  <TableContainer component={Paper}>\n    <Table aria-label=\"event table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Event</TableCell>\n          <TableCell align=\"right\">Day</TableCell>\n          <TableCell align=\"right\">Date</TableCell>\n          <TableCell align=\"right\">Time</TableCell>\n          <TableCell align=\"right\">Open Spots</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {props.events.map((event) => (\n          <TableRow key={event.eventName}>\n            <TableCell component=\"th\" scope=\"row\">\n              <Link\n                component={RouterLink}\n                to={\n                  props.admin\n                    ? `/reservations/${event._id}`\n                    : `/reserve/${event._id}`\n                }\n              >\n                {event.eventName}\n              </Link>\n            </TableCell>\n            <TableCell align=\"right\">\n              {new Date(event.date).toLocaleDateString(\"us-en\", {\n                weekday: \"short\",\n              })}\n            </TableCell>\n            <TableCell align=\"right\">\n              {new Date(event.date).toLocaleDateString()}\n            </TableCell>\n            <TableCell align=\"right\">\n              {new Date(event.date).toLocaleTimeString([], {\n                timeStyle: \"short\",\n              })}\n            </TableCell>\n            <TableCell align=\"right\">{event.openSpots}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n);\n\nexport default eventTable;\n","import React, { useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\"\nimport { connect } from \"react-redux\";\nimport { fetchUpcomingEvents } from \"../../store/actions/index\";\n\nimport EventTable from \"../../components/EventTable/EventTable\";\n\nconst EventList = (props) => {\n  useEffect(() => {\n    props.fetchUpcomingEvents();\n  }, [props.fetchUpcomingEvents]);\n\n  let eventList = <div>Loading...</div>;\n\n  if (props.events.events.length) {\n    eventList = <EventTable events={props.events.events} />\n  }\n\n  return (\n    <div>\n      <h2>Event List</h2>\n      {eventList}\n      <br />\n      <br />\n      <Link component={RouterLink} to=\"/admin\">Admin</Link>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    events: state.event,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUpcomingEvents })(EventList);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderDateAndTimeField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    id=\"datetime-local\"\n    label={label}\n    type=\"datetime-local\"\n    InputLabelProps={{ shrink: true }}\n    {...input}\n    {...custom}\n  />\n);\n\nconst EventForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"eventName\"\n          component={renderTextField}\n          label=\"Event Name\"\n        />\n      </div>\n      <br />\n      <div>\n        <Field\n          name=\"date\"\n          component={renderDateAndTimeField}\n          label=\"Event Date & Time\"\n        />\n      </div>\n      <br />\n      <div>\n        <Field\n          name=\"openSpots\"\n          component={renderTextField}\n          type=\"number\"\n          label=\"Open Spots\"\n          inputProps={{ \"min\": 0 }}\n        />\n      </div>\n      <br />\n      <br />\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"event\",\n})(EventForm);\n","import React, { useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createEvent, startCreateGroup } from \"../../store/actions\";\nimport EventForm from \"./EventForm/EventForm\";\n\nconst EventCreate = (props) => {\n  useEffect(() => {\n    props.startCreateGroup()\n  }, [props.startCreateGroup])\n\n  const onSubmit = (formValues) => {\n    props.createEvent(formValues);\n  };\n\n  const createdRedirect = props.created ? <Redirect to=\"/\" /> : null;\n\n  return (\n    <React.Fragment>\n      {createdRedirect}\n      <h2>Create An Event:</h2>\n      <EventForm onSubmit={onSubmit} />\n      <br />\n      <br />\n      <br />\n      <Link to=\"/reservations\">View Reservations</Link>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    created: state.event.created,\n  };\n};\n\nexport default connect(mapStateToProps, { createEvent, startCreateGroup })(EventCreate);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nlet ReserveForm = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"groupName\"\n          component={renderTextField}\n          label=\"Group Name\"\n        />\n      </div>\n      <div>\n        <Field name=\"email\" component={renderTextField} type=\"email\" label=\"Email\" />\n      </div>\n      <div>\n        <Field\n          name=\"groupSize\"\n          component={renderTextField}\n          type=\"number\"\n          label=\"How Many People in Your Group?\"\n          inputProps={{ min: 1 }}\n        />\n      </div>\n      <br />\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nReserveForm = reduxForm({\n  form: \"reserve\",\n})(ReserveForm);\n\nexport default ReserveForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport PrintIcon from \"@material-ui/icons/Print\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nconst GroupConfirm = (props) => (\n  <div>\n    <h3>Reservation Confirmation</h3>\n    {console.log(\"GROUP: \", props.group, props.event)}\n    <div>\n      <strong>Group Name: </strong>\n      {props.group.groupName} <br />\n      <strong>Group Size: </strong>\n      {props.group.groupSize} <br />\n      <strong>Email: </strong>\n      {props.group.email} <br />\n      <strong>Event Name: </strong>\n      {props.event.eventName} <br />\n      <strong>Event Date: </strong>\n      {new Date(props.event.date).toLocaleDateString(\"en-us\")} <br />\n      <strong>Event Time: </strong>\n      {new Date(props.event.date).toLocaleTimeString(\"en-us\", {\n        timeStyle: \"short\",\n      })}{\" \"}\n      <br />\n      <br />\n      <strong>\n        Time Reservation Made:{\" \"}\n        {new Date().toLocaleString(\"en-us\", {\n          dateStyle: \"short\",\n          timeStyle: \"short\",\n        })}\n      </strong>\n      <br />\n      <br />\n      <hr />\n      <br />\n      <div>The above details have been sent to you.</div>\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => window.print()}><PrintIcon />Print</Button>\n      {\"  \"}\n      <Link to=\"/\"><Button variant=\"contained\" color=\"primary\"><CloseIcon />Close</Button></Link>\n    </div>\n  </div>\n);\n\nexport default GroupConfirm;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvent, createGroup, startCreateGroup } from \"../../store/actions\";\n\nimport ReserveForm from \"./ReserveForm/ReserveForm\";\nimport GroupConfirm from \"../../components/GroupConfirm/GroupConfirm\";\n\nconst EventReserve = (props) => {\n  useEffect(() => {\n    props.fetchEvent(props.match.params.id);\n    return () => props.startCreateGroup();\n  }, [props.fetchEvent]);\n\n  const onSubmit = (formValues) => {\n    props.createGroup(props.match.params.id, formValues);\n  };\n\n  // const createdRedirect = props.created ? <GroupConfirm /> : null;\n\n  let renderForm = <div>Loading ...</div>;\n\n  if (props.event)\n    renderForm = (\n      <div>\n        <h2>Make Reservation</h2>\n        <h4>\n          {props.event.eventName} -{\" \"}\n          {new Date(props.event.date).toLocaleDateString(\"us-en\", {\n            weekday: \"short\",\n          })}\n          {\", \"}\n          {new Date(props.event.date).toLocaleString(\"en-us\", {\n            dateStyle: \"short\",\n            timeStyle: \"short\",\n          })}\n        </h4>\n\n        <ReserveForm onSubmit={onSubmit} event={props.event} />\n      </div>\n    );\n\n  return (\n    <div>\n      {/* {createdRedirect} */}\n      {(!props.created) ? renderForm : <GroupConfirm group={props.group.dbGroup} event={props.event} /> }\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    event: state.event.events,\n    created: state.group.created,\n    group: state.group.group\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvent,\n  createGroup,\n  startCreateGroup,\n})(EventReserve);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUpcomingEvents } from \"../../store/actions/index\";\n\nimport EventTable from \"../../components/EventTable/EventTable\";\n\nconst ReservationList = (props) => {\n  useEffect(() => {\n    props.fetchUpcomingEvents();\n  }, [props.fetchUpcomingEvents]);\n\n  let renderList = <div>Loading...</div>;\n\n  if (props.events.length > 0) {\n    renderList = <EventTable events={props.events} admin={true} />;\n  }\n\n  return (\n    <div>\n      <h2>Reservation List</h2>\n\n      {renderList}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { events: state.event.events };\n};\n\nexport default connect(mapStateToProps, { fetchUpcomingEvents })(\n  ReservationList\n);\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst ShowGroups = (props) => (\n  <div>\n    <h3>Groups for: {props.event[0].eventName} - { new Date(props.event[0].date).toLocaleString()}</h3>\n    <TableContainer component={Paper}>\n        <Table aria-label=\"group table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>Group</TableCell>\n                    <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell align=\"right\">Email</TableCell>\n                    <TableCell align=\"right\">Note</TableCell>\n                    <TableCell align=\"right\">Edit</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.event[0].groups.map((group) => (\n                    <TableRow key={group._id}>\n                        <TableCell component=\"th\" scope=\"row\">{group.groupName}</TableCell>\n                        <TableCell align=\"right\">{group.groupSize}</TableCell>\n                        <TableCell align=\"right\">{group.email}</TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    </TableContainer>\n  </div>\n);\n\nexport default ShowGroups;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPopulatedEvent } from \"../../store/actions/index\";\n\nimport ShowGroups from \"../../components/ShowGroups/ShowGroups\";\n\nconst Reservations = (props) => {\n  useEffect(() => {\n    props.fetchPopulatedEvent(props.match.params.id);\n  }, [props.fetchEvent]);\n\n  let renderShowGroups = <div>Loading...</div>;\n\n  console.log(\"EVENT: \", props.event);\n\n  if (props.event[0]) {\n    if (props.event[0].groups) {\n      renderShowGroups = <ShowGroups event={props.event} />;\n    }\n  }\n\n  return (\n    <div>\n      <h2>Reservations</h2>\n      {renderShowGroups}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    event: state.event.events,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPopulatedEvent })(Reservations);\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport EventList from \"./containers/EventList/EventList\";\nimport EventCreate from \"./containers/EventCreate/EventCreate\";\nimport EventReserve from \"./containers/EventReserve/EventReserve\";\nimport ReservationList from \"./containers/Reservations/ReservationList\";\nimport Reservations from \"./containers/Reservations/Reservations\";\n\nconst App = (props) => {\n  let routes = (\n    <Switch>\n      <Route path=\"/\" exact component={EventList} />\n      <Route path=\"/admin\" component={EventCreate} />\n      <Route path=\"/reserve/:id\" exact component={EventReserve} />\n      <Route path=\"/reservations\" exact component={ReservationList} />\n      <Route path=\"/reservations/:id\" exact component={Reservations} />\n    </Switch>\n  );\n\n  return (\n    <div>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Layout>{routes}</Layout>\n      </Container>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  events: [],\n  created: false,\n};\n\nconst eventReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_EVENTS:\n      return { ...state, events: action.payload, created: false };\n    case actionTypes.FETCH_EVENT:\n      return { ...state, events: action.payload };\n    case actionTypes.CREATE_EVENT:\n      return { ...state, events: action.payload, created: true };\n    case actionTypes.FETCH_POPULATED_EVENT:\n      return { ...state, events: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  created: false,\n};\n\nconst groupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_GROUP:\n      return { ...state, group: action.payload, created: true };\n    case actionTypes.CREATE_GROUP_START:\n      return { ...state, created: false };\n    default:\n      return state;\n  }\n};\n\nexport default groupReducer;\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport churchReducer from \"./church\";\nimport eventReducer from \"./event\";\nimport groupReducer from \"./group\";\n\nexport default combineReducers({\n  church: churchReducer,\n  event: eventReducer,\n  group: groupReducer,\n  form: formReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport reducers from \"./store/reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}