{"version":3,"sources":["apis/seats.js","store/actions/actionTypes.js","store/actions/index.js","containers/GoogleAuth/GoogleAuth.js","hoc/Layout/Layout.js","components/EventTable/EventTable.js","containers/EventList/EventList.js","containers/EventCreate/EventForm/EventForm.js","containers/EventCreate/EventCreate.js","containers/EventReserve/ReserveForm/ReserveForm.js","components/GroupConfirm/GroupConfirm.js","containers/EventReserve/EventReserve.js","components/UI/Modal/Modal.js","containers/EventDelete/EventDelete.js","containers/EventEdit/EventEdit.js","containers/Reservations/ReservationList.js","components/ShowGroups/ShowGroups.js","containers/Reservations/Reservations.js","containers/Reservations/ReservationEdit.js","containers/Settings/SettingsForm/SettingsForm.js","containers/Settings/Settings.js","App.js","store/reducers/church.js","store/reducers/event.js","store/reducers/group.js","store/reducers/auth.js","store/reducers/index.js","index.js"],"names":["axios","create","baseURL","CREATE_EVENT","FETCH_EVENTS","FETCH_EVENT","FETCH_POPULATED_EVENT","DELETE_EVENT","EDIT_EVENT","CREATE_GROUP","EDIT_GROUP","DELETE_GROUP","CREATE_GROUP_START","SIGN_IN","SIGN_OUT","FETCH_MAX_GROUP_SIZE","FETCH_CHURCH_SETTINGS","fetchUpcomingEvents","dispatch","a","seats","get","response","type","actionTypes","payload","data","fetchEvent","id","deleteEvent","delete","startCreateGroup","GoogleAuth","onAuthChange","isSignedIn","profile","auth","currentUser","getBasicProfile","props","signIn","signOut","onSignInClick","onSignOutClick","adminRedirect","isAdmin","to","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","Fragment","Link","component","RouterLink","onClick","renderAuthButton","React","Component","connect","state","post","email","console","log","errorMessage","alert","Layout","view","location","pathname","startsWith","children","useStyles","makeStyles","theme","paper","top","left","transform","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","eventTable","classes","useState","modalOpen","modalSetOpen","modalTitle","setModalTitle","modalContent","setModalContent","modalActions","setModalActions","modalBody","className","handleOpen","action","name","Button","variant","color","handleClose","deleteAndCloseModal","style","marginLeft","TableContainer","Paper","Modal","open","onClose","aria-labelledby","aria-describedby","Table","aria-label","TableHead","TableRow","TableCell","align","isAuth","TableBody","events","map","event","_id","eventName","Date","date","toLocaleDateString","weekday","toLocaleTimeString","timeStyle","openSpots","fontSize","useEffect","eventList","length","EventTable","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","renderDateAndTimeField","InputLabelProps","shrink","reduxForm","form","handleSubmit","pristine","reset","submitting","onSubmit","Field","inputProps","created","createEvent","formValues","createdRedirect","ReserveForm","min","max","maxGroupSize","signupMessage","marginTop","validate","errors","forEach","field","test","GroupConfirm","group","groupName","groupSize","toLocaleString","dateStyle","print","ownProps","filter","match","params","church","createGroup","renderForm","Math","dbGroup","rand","round","random","getModalStyle","SimpleModal","modalStyle","setOpen","body","title","content","editEvent","put","eventCopy","toString","split","toISOString","initialValues","renderList","admin","ShowGroups","groups","note","fetchPopulatedEvent","deleteGroup","eventId","renderShowGroups","editGroup","difference","sizeDifference","renderAdminEmails","fields","submitFailed","List","maxWidth","marginBottom","adminEmail","index","display","alignItems","minWidth","remove","push","SettingsForm","FieldArray","multiline","rows","fetchChurchSettings","updateChurchSettings","withRouter","isAuthenticated","fetchMaxGroupSize","routes","path","exact","EventList","EventReserve","render","EventCreate","EventEdit","EventDelete","ReservationList","Reservations","ReservationEdit","Settings","CssBaseline","Container","INITIAL_STATE","adminFirstName","adminLastName","initialState","eventReducer","concat","dbEvent","groupReducer","userId","adminOf","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.0f1b070f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: '/'\n})","export const CREATE_EVENT = \"CREATE_EVENT\";\nexport const FETCH_EVENTS = \"FETCH_EVENTS\";\nexport const FETCH_EVENT = \"FETCH_EVENT\";\nexport const FETCH_POPULATED_EVENT = \"FETCH_POPULATED_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\n\nexport const CREATE_GROUP = \"CREATE_GROUP\";\nexport const EDIT_GROUP = \"EDIT_GROUP\";\nexport const DELETE_GROUP = \"DELETE_GROUP\";\nexport const CREATE_GROUP_START = \"CREATE_GROUP_START\";\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\n\nexport const FETCH_MAX_GROUP_SIZE = \"FETCH_MAX_GROUP_SIZE\";\nexport const FETCH_CHURCH_SETTINGS = \"FETCH_CHURCH_SETTINGS\";\nexport const UPDATE_CHURCH_SETTINGS = \"UPDATE_CHURCH_SETTINGS\";\n","import seats from \"../../apis/seats\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const fetchMaxGroupSize = () => async (dispatch) => {\n  const response = await seats.get(`/church`);\n\n  dispatch({\n    type: actionTypes.FETCH_MAX_GROUP_SIZE,\n    payload: response.data,\n  });\n};\n\nexport const fetchChurchSettings = () => async (dispatch) => {\n  const response = await seats.get(`church/admin`);\n\n  dispatch({\n    type: actionTypes.FETCH_CHURCH_SETTINGS,\n    payload: response.data[0]\n  })\n};\n\nexport const updateChurchSettings = (formValues) => async (dispatch) => {\n  const response = await seats.put(`church/admin`, formValues);\n}\n\nexport const createEvent = (formValues) => async (dispatch) => {\n  const response = await seats.post(\"/event\", formValues);\n\n  dispatch({\n    type: actionTypes.CREATE_EVENT,\n    payload: response.data,\n  });\n};\n\nexport const fetchUpcomingEvents = () => async (dispatch) => {\n  const response = await seats.get(\"/event\");\n\n  dispatch({ type: actionTypes.FETCH_EVENTS, payload: response.data });\n};\n\nexport const fetchEvent = (id) => async (dispatch) => {\n  const response = await seats.get(`/event/${id}`);\n\n  dispatch({ type: actionTypes.FETCH_EVENT, payload: response.data });\n};\n\nexport const fetchPopulatedEvent = (id) => async (dispatch) => {\n  const response = await seats.get(`event/admin/${id}`);\n\n  dispatch({ type: actionTypes.FETCH_EVENTS, payload: response.data });\n};\n\nexport const deleteEvent = (id) => async (dispatch) => {\n  const response = await seats.delete(`event/${id}`);\n\n  dispatch({ type: actionTypes.DELETE_EVENT, payload: id });\n};\n\nexport const editEvent = (id, formValues) => async (dispatch) => {\n  const response = await seats.put(`event/${id}`, formValues);\n\n  dispatch({ type: actionTypes.EDIT_EVENT, payload: response.data });\n};\n\nexport const startCreateGroup = () => {\n  return {\n    type: actionTypes.CREATE_GROUP_START,\n  };\n};\n\nexport const createGroup = (id, formValues) => async (dispatch) => {\n  const response = await seats.post(`/group/${id}`, formValues);\n\n  dispatch({\n    type: actionTypes.CREATE_GROUP,\n    payload: response.data,\n  });\n};\n\nexport const editGroup = (id, formValues) => async (dispatch) => {\n  const response = await seats.put(`/group/${id}`, formValues);\n\n  dispatch({\n    type: actionTypes.EDIT_GROUP,\n    payload: response.data,\n  });\n};\n\nexport const deleteGroup = (id, groupSize, eventId) => async (dispatch) => {\n  const response = await seats.delete(`/group/${id}/${groupSize}/${eventId}`);\n\n  dispatch({\n    type: actionTypes.DELETE_GROUP,\n    payload: response.data,\n  });\n};\n\nexport const signIn = (profile) => async (dispatch) => {\n  const response = await seats.post(\"/user\", profile);\n\n  if (response.data.email) {\n    dispatch({\n      type: actionTypes.SIGN_IN,\n      payload: response.data,\n    });\n  } else {\n    console.log(\"RES REAL: \", response.data.errorMessage);\n    alert(response.data.errorMessage);\n    dispatch({\n      type: actionTypes.SIGN_OUT,\n      payload: response.data,\n    });\n  }\n};\n\nexport const signOut = () => {\n  return {\n    type: actionTypes.SIGN_OUT,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, Link as RouterLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport { signIn, signOut } from \"../../store/actions\";\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"666797596660-g0ss4568pfnjesar12r2n0irheeg92n1.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      const profile = this.auth.currentUser.get().getBasicProfile();\n      this.props.signIn(profile);\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <React.Fragment>\n          <ul>\n            <li>\n              <Link to={\"/event-create\"} component={RouterLink}>\n                Create Event\n              </Link>\n            </li>\n            <li>\n              <div>\n                <Link to={\"/settings\"} component={RouterLink}>\n                  Settings\n                </Link>\n              </div>\n            </li>\n            <li>\n              <div onClick={this.onSignOutClick}>\n                <Link to={\"#\"} component={RouterLink}>\n                  Sign Out\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <div onClick={this.onSignInClick}>\n          <Link to={\"#\"} component={RouterLink}>\n            Admin\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  adminRedirect = this.props.isAdmin ? <Redirect to=\"/admin\" /> : null;\n\n  render() {\n    return (\n      <div>\n        {this.adminRedirect}\n        {this.renderAuthButton()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    // isAdmin: state.auth.userId.adminOf.length > 0,\n  };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport GoogleAuth from \"../../containers/GoogleAuth/GoogleAuth\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Layout = (props) => {\n\n    let view = (\n      <div>\n        <h1>\n          <Link component={RouterLink} to=\"/\">\n            RB Community Church | Seat Save\n          </Link>\n        </h1>\n        <GoogleAuth />\n      </div>\n    );\n\n    if (window.location.pathname.startsWith(\"/embed\")) {\n      console.log(\"TRUE\")\n      view = (<div></div>)\n    }\n\n\n  return (\n    <div>\n      {view}\n      <main>{props.children}</main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Link from \"@material-ui/core/Link\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst eventTable = (props) => {\n  const classes = useStyles();\n  const [modalOpen, modalSetOpen] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(\"\");\n  const [modalActions, setModalActions] = useState(\"\");\n\n  let modalBody = (\n    <div className={classes.paper}>\n      <h2>{modalTitle}</h2>\n      <p>{modalContent}</p>\n      <div>{modalActions}</div>\n    </div>\n  );\n\n  const deleteAndCloseModal = (id) => {\n    props.delete(id);\n    handleClose();\n  };\n\n  const handleOpen = (action, id, name) => {\n    if (action === \"del\") {\n      setModalTitle(\"Delete Event\");\n      setModalContent(\n        `Are you sure you want to delete this event named: ${name}`\n      );\n      setModalActions(\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => deleteAndCloseModal(id)}\n          >\n            Delete\n          </Button>\n          <Button style={{ marginLeft: \"1rem\" }} variant=\"contained\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </div>\n      );\n    }\n    modalSetOpen(true);\n  };\n\n  const handleClose = () => {\n    modalSetOpen(false);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Modal\n        open={modalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"delete-event-confirmation\"\n        aria-describedby=\"delete-event-confirm\"\n      >\n        {modalBody}\n      </Modal>\n      <Table aria-label=\"event table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Event</TableCell>\n            <TableCell align=\"right\">Day</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Time</TableCell>\n            <TableCell align=\"right\">Open Spots</TableCell>\n            {props.isAuth ? <><TableCell align=\"right\">Admin</TableCell><TableCell align=\"right\">Groups</TableCell></> : null}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.events.map((event) => (\n            <TableRow key={event._id}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link component={RouterLink} to={`/reserve/${event._id}`}>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Reserve\n                  </Button>\n                </Link>\n              </TableCell>\n              <TableCell>{event.eventName}</TableCell>\n              <TableCell align=\"right\">\n                {new Date(event.date).toLocaleDateString(\"us-en\", {\n                  weekday: \"short\",\n                })}\n              </TableCell>\n              <TableCell align=\"right\">\n                {new Date(event.date).toLocaleDateString()}\n              </TableCell>\n              <TableCell align=\"right\">\n                {new Date(event.date).toLocaleTimeString([], {\n                  timeStyle: \"short\",\n                })}\n              </TableCell>\n              <TableCell align=\"right\">{event.openSpots}</TableCell>\n              {/* {props.isAuth ? <TableCell align=\"right\"> <EditIcon fontSize=\"small\" /> <DeleteIcon onClick={() => props.delete(event._id)} fontSize=\"small\" /> </TableCell> : null } */}\n              {props.isAuth ? (\n                <>\n                <TableCell align=\"right\">\n                  {\" \"}\n                  <Link\n                    component={RouterLink}\n                    to={`/events/edit/${event._id}`}\n                    color=\"textPrimary\"\n                  >\n                    <EditIcon fontSize=\"small\" />\n                  </Link>\n                  <Link component={RouterLink} to=\"#\" color=\"textPrimary\">\n                    <DeleteIcon\n                      style={{ marginLeft: 5 }}\n                      fontSize=\"small\"\n                      onClick={() =>\n                        handleOpen(\"del\", event._id, event.eventName)\n                      }\n                    />\n                  </Link>\n                </TableCell>\n                <TableCell align=\"right\"><Link component={RouterLink} to={`/reservations/${event._id}`}>View</Link></TableCell>\n                </>\n              ) : null}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default eventTable;\n","import React, { useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\"\nimport { connect } from \"react-redux\";\nimport { fetchUpcomingEvents, deleteEvent } from \"../../store/actions/index\";\n\nimport EventTable from \"../../components/EventTable/EventTable\";\n\nconst EventList = (props) => {\n  useEffect(() => {\n    props.fetchUpcomingEvents();\n  }, [props.fetchUpcomingEvents]);  \n\n  let eventList = <div>Loading...</div>;\n\n  if (props.events.events.length) {\n    eventList = <EventTable events={props.events.events} isAuth={props.isAuth} delete={props.deleteEvent} />\n  }\n\n  return (\n    <div>\n      <h2>Event List</h2>\n      {eventList}\n      <br />\n      <br />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    events: state.event,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUpcomingEvents, deleteEvent })(EventList);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderDateAndTimeField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    id=\"datetime-local\"\n    label={label}\n    type=\"datetime-local\"\n    InputLabelProps={{ shrink: true }}\n    {...input}\n    {...custom}\n  />\n);\n\nconst EventForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"eventName\"\n          component={renderTextField}\n          label=\"Event Name\"\n        />\n      </div>\n      <br />\n      <div>\n        <Field\n          name=\"date\"\n          component={renderDateAndTimeField}\n          label=\"Event Date & Time\"\n        />\n      </div>\n      <br />\n      <div>\n        <Field\n          name=\"openSpots\"\n          component={renderTextField}\n          type=\"number\"\n          label=\"Open Spots\"\n          inputProps={{ \"min\": 0 }}\n        />\n      </div>\n      <br />\n      <br />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"event\",\n})(EventForm);\n","import React, { useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createEvent, startCreateGroup } from \"../../store/actions\";\nimport EventForm from \"./EventForm/EventForm\";\n\nconst EventCreate = (props) => {\n  useEffect(() => {\n    props.startCreateGroup()\n  }, [props.startCreateGroup])\n\n  const onSubmit = (formValues) => {\n    props.createEvent(formValues);\n  };\n\n  const createdRedirect = props.created ? <Redirect to=\"/\" /> : null;\n\n  return (\n    <React.Fragment>\n      {createdRedirect}\n      <h2>Create An Event:</h2>\n      <EventForm onSubmit={onSubmit} />\n      <br />\n      <br />\n      <br />\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    created: state.event.created,\n  };\n};\n\nexport default connect(mapStateToProps, { createEvent, startCreateGroup })(EventCreate);\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\nimport Link from \"@material-ui/core/Link\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nlet ReserveForm = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"groupName\"\n          component={renderTextField}\n          label=\"Group Name\"\n        />\n      </div>\n      <div>\n        <Field\n          name=\"email\"\n          component={renderTextField}\n          type=\"email\"\n          label=\"Email\"\n        />\n      </div>\n      <div>\n        <Field\n          name=\"groupSize\"\n          component={renderTextField}\n          type=\"number\"\n          label=\"How Many People in Your Group?\"\n          inputProps={{ min: 1, max: props.maxGroupSize }}\n          style={{ width: \"300px\" }}\n        />\n      </div>\n      {props.auth ? (\n        <div>\n          <Field name=\"note\" component={renderTextField} label=\"Note\" />\n        </div>\n      ) : null}\n      <br />\n      <p>{props.signupMessage}</p>\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n      {props.auth && !window.location.pathname.startsWith(\"/embed\") ? (\n        <div style={{ marginTop: \"2rem\" }}>\n          <Link component={RouterLink} to={`/embed/reserve/${props.event._id}`}>\n            Embeddable form\n          </Link>\n        </div>\n      ) : null}\n      {/* <Button style={{ marginLeft: \"1rem\" }} variant=\"contained\" color=\"default\">\n        Cancel\n      </Button> */}\n    </form>\n  );\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n  const requiredFields = [\"groupName\", \"email\", \"groupSize\"];\n  requiredFields.forEach((field) => {\n    if (!formValues[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n  if (\n    formValues.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.email)\n  ) {\n    errors.email = \"Invalid email address\";\n  }\n  return errors;\n};\n\nReserveForm = reduxForm({\n  form: \"reserve\",\n  validate,\n})(ReserveForm);\n\nexport default ReserveForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport PrintIcon from \"@material-ui/icons/Print\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nconst GroupConfirm = (props) => (\n  <div>\n    <h3>Reservation Confirmation</h3>\n    {console.log(\"GROUP: \", props.group, props.event)}\n    <div>\n      <strong>Group Name: </strong>\n      {props.group.groupName} <br />\n      <strong>Group Size: </strong>\n      {props.group.groupSize} <br />\n      <strong>Email: </strong>\n      {props.group.email} <br />\n      <strong>Event Name: </strong>\n      {props.event.eventName} <br />\n      <strong>Event Date: </strong>\n      {new Date(props.event.date).toLocaleDateString(\"en-us\")} <br />\n      <strong>Event Time: </strong>\n      {new Date(props.event.date).toLocaleTimeString(\"en-us\", {\n        timeStyle: \"short\",\n      })}{\" \"}\n      <br />\n      <br />\n      <strong>\n        Time Reservation Made:{\" \"}\n        {new Date().toLocaleString(\"en-us\", {\n          dateStyle: \"short\",\n          timeStyle: \"short\",\n        })}\n      </strong>\n      <br />\n      <br />\n      <hr />\n      <br />\n      <div>The above details have been sent to you.</div>\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => window.print()}><PrintIcon />Print</Button>\n      {\"  \"}\n      <Link to=\"/\"><Button variant=\"contained\" color=\"primary\"><CloseIcon />Close</Button></Link>\n    </div>\n  </div>\n);\n\nexport default GroupConfirm;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvent, createGroup, startCreateGroup } from \"../../store/actions\";\n\nimport ReserveForm from \"./ReserveForm/ReserveForm\";\nimport GroupConfirm from \"../../components/GroupConfirm/GroupConfirm\";\n\nconst EventReserve = (props) => {\n  useEffect(() => {\n    props.fetchEvent(props.match.params.id);\n\n    // calculate maxGroupSize accomadating for available spots\n    // console.log( Math.min(props.maxGroupSize, props.event[0].openSpots))\n\n    return () => props.startCreateGroup();\n  }, [props.fetchEvent]);\n\n  const onSubmit = (formValues) => {\n    props.createGroup(props.match.params.id, formValues);\n  };\n\n  // const createdRedirect = props.created ? <GroupConfirm /> : null;\n\n  let renderForm = <div>Loading ...</div>;\n\n  if (props.event.length > 0)\n    renderForm = (\n      <div>\n        <h2>Make Reservation</h2>\n        <h4>\n          {props.event[0].eventName} -{\" \"}\n          {new Date(props.event[0].date).toLocaleDateString(\"us-en\", {\n            weekday: \"short\",\n          })}\n          {\", \"}\n          {new Date(props.event[0].date).toLocaleString(\"en-us\", {\n            dateStyle: \"short\",\n            timeStyle: \"short\",\n          })}\n        </h4>\n\n        <ReserveForm\n          onSubmit={onSubmit}\n          event={props.event[0]}\n          auth={props.isSignedIn}\n          maxGroupSize={Math.min(props.maxGroupSize, props.event[0].openSpots)}\n          signupMessage={props.signupMessage}\n        />\n      </div>\n    );\n\n  return (\n    <div>\n      {/* {createdRedirect} */}\n      {!props.created ? (\n        renderForm\n      ) : (\n        <GroupConfirm group={props.group.dbGroup} event={props.event} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    event: state.event.events.filter(\n      (event) => event._id === ownProps.match.params.id\n    ),\n    created: state.group.created,\n    group: state.group.group,\n    isSignedIn: state.auth.isSignedIn,\n    maxGroupSize: state.church.maxGroupSize,\n    signupMessage: state.church.signupMessage,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvent,\n  createGroup,\n  startCreateGroup,\n})(EventReserve);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p>\n      <SimpleModal />\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import { PromiseProvider } from \"mongoose\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport SimpleModal from \"../../components/UI/Modal/Modal\";\nimport Button from \"@material-ui/core/Button\"\nimport { fetchEvent, deleteEvent } from \"../../store/actions\";\n\nconst EventDelete = (props) => {\n  useEffect(() => {\n    props.fetchEvent(props.match.params.id)\n  }, []);\n\n  const renderContent = () => \"Are you sure you want to delete this event?\"\n\n  const renderActions = (props) => (\n    <React.Fragment>\n      <Button variant=\"contained\" color=\"secondary\">DELETE</Button>\n    </React.Fragment>\n  )\n\n  return (\n    <SimpleModal title={`Delete ${props.event.eventName}`} content={renderContent()} />\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return { event: state.event.events }\n}\n\nexport default connect(mapStateToProps, { fetchEvent, deleteEvent })(EventDelete);\n","import _ from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvent, editEvent } from \"../../store/actions/index\";\nimport EventForm from \"../EventCreate/EventForm/EventForm\";\n\nconst EventEdit = (props) => {\n  useEffect(() => {\n    props.fetchEvent(props.match.params.id);\n  }, [props.fetchEvent]);\n\n  const onSubmit = (formValues) => {\n    props.editEvent(props.match.params.id, formValues);\n  };\n\n  const createdRedirect = props.created ? <Redirect to=\"/\" /> : null;\n\n  let form = <p>Hello</p>;\n\n  if ((props.event.length = 1)) {\n    let eventCopy = props.event[0];\n    eventCopy ? (eventCopy.date = new Date(new Date(eventCopy.date).toString().split('GMT')[0]+' UTC').toISOString().split('.')[0]) : null;\n\n    form = <EventForm initialValues={props.event[0]} onSubmit={onSubmit} />;\n  }\n\n  return (\n    <div>\n      {createdRedirect}\n      <h2>Event Edit</h2>\n      {form}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    event: state.event.events.filter(\n      (event) => event._id === ownProps.match.params.id\n    ),\n    created: state.event.created,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchEvent, editEvent })(EventEdit);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUpcomingEvents } from \"../../store/actions/index\";\n\nimport EventTable from \"../../components/EventTable/EventTable\";\n\nconst ReservationList = (props) => {\n  useEffect(() => {\n    props.fetchUpcomingEvents();\n  }, [props.fetchUpcomingEvents]);\n\n  let renderList = <div>Loading...</div>;\n\n  if (props.events.length > 0) {\n    renderList = <EventTable events={props.events} admin={true} />;\n  }\n\n  return (\n    <div>\n      <h2>Reservation List</h2>\n\n      {renderList}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { events: state.event.events };\n};\n\nexport default connect(mapStateToProps, { fetchUpcomingEvents })(\n  ReservationList\n);\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst ShowGroups = (props) => {\n  const classes = useStyles();\n  const [modalOpen, modalSetOpen] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(\"\");\n  const [modalActions, setModalActions] = useState(\"\");\n\n  let modalBody = (\n    <div className={classes.paper}>\n      <h2>{modalTitle}</h2>\n      <p>{modalContent}</p>\n      <div>{modalActions}</div>\n    </div>\n  );\n\n  const deleteAndCloseModal = (id, groupSize) => {\n    props.delete(id, groupSize, props.event[0]._id);\n    handleClose();\n  };\n\n  const handleOpen = (action, id, name, groupSize) => {\n    if (action === \"del\") {\n      setModalTitle(\"Delete Group\");\n      setModalContent(\n        `Are you sure you want to delete this group named: ${name}`\n      );\n      setModalActions(\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => deleteAndCloseModal(id, groupSize)}\n          >\n            Delete\n          </Button>\n          <Button style={{ marginLeft: \"1rem\" }} variant=\"contained\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </div>\n      );\n    }\n    modalSetOpen(true);\n  };\n\n  const handleClose = () => {\n    modalSetOpen(false);\n  };\n\n  return (\n    <div>\n    <Modal\n        open={modalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"delete-group-confirmation\"\n        aria-describedby=\"delete-group-confirm\"\n      >\n        {modalBody}\n      </Modal>\n      <h3>\n        Groups for: {props.event[0].eventName} -{\" \"}\n        {new Date(props.event[0].date).toLocaleString()}\n      </h3>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"group table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Group</TableCell>\n              <TableCell align=\"right\">Quantity</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Note</TableCell>\n              <TableCell align=\"right\">Edit</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.event[0].groups.map((group) => (\n              <TableRow key={group._id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {group.groupName}\n                </TableCell>\n                <TableCell align=\"right\">{group.groupSize}</TableCell>\n                <TableCell align=\"right\">{group.email}</TableCell>\n                <TableCell align=\"right\">{group.note}</TableCell>\n                <TableCell align=\"right\">\n                  <Link\n                    component={RouterLink}\n                    to={`/reservations/edit/${group._id}`}\n                    color=\"textPrimary\"\n                  >\n                    <EditIcon fontSize=\"small\" />\n                  </Link>\n                  <Link component={RouterLink} to=\"#\" color=\"textPrimary\">\n                    <DeleteIcon\n                      style={{ marginLeft: 5 }}\n                      fontSize=\"small\"\n                      onClick={() =>\n                        handleOpen(\"del\", group._id, group.groupName, group.groupSize)\n                      }\n                    />\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default ShowGroups;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPopulatedEvent, deleteGroup } from \"../../store/actions/index\";\n\nimport ShowGroups from \"../../components/ShowGroups/ShowGroups\";\n\nconst Reservations = (props) => {\n  useEffect(() => {\n    props.fetchPopulatedEvent(props.match.params.id);\n  }, [props.fetchEvent]);\n\n  let renderShowGroups = <div>Loading...</div>;\n\n  if (props.event[0]) {\n    if (props.event[0].groups) {\n      renderShowGroups = <ShowGroups event={props.event} delete={props.deleteGroup} />;\n    }\n  }\n\n  return (\n    <div>\n      <h2>Reservations</h2>\n      {renderShowGroups}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    event: state.event.events\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPopulatedEvent, deleteGroup })(Reservations);\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ReserveForm from \"../EventReserve/ReserveForm/ReserveForm\";\nimport { connect } from \"react-redux\";\nimport { editGroup, startCreateGroup } from \"../../store/actions/index\";\n\nconst ReservationEdit = (props) => {\n  useEffect(() => {\n    return () => props.startCreateGroup();\n  }, [])\n\n  const onSubmit = (formValues) => {\n    // Calculate change in available seats for the event\n    const oldGroupSize = props.group[0].groupSize;\n    const newGroupSize = formValues.groupSize;\n    const difference = oldGroupSize - newGroupSize;\n\n    formValues.eventId = props.eventId;\n    formValues.sizeDifference = difference;\n    props.editGroup(props.match.params.id, formValues);\n  };\n\n  const createdRedirect = props.created ? <Redirect to=\"/\" /> : null;\n\n  return (\n    <div>\n      {createdRedirect}\n      <h2>Reservation Edit</h2>\n      <ReserveForm\n        initialValues={props.group[0]}\n        auth={props.isSignedIn}\n        onSubmit={onSubmit}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    group: state.event.events[0].groups.filter(\n      (group) => group._id === ownProps.match.params.id\n    ),\n    isSignedIn: state.auth.isSignedIn,\n    eventId: state.event.events[0]._id,\n    created: state.group.created,\n  };\n};\n\nexport default connect(mapStateToProps, { startCreateGroup, editGroup })(ReservationEdit);\n","import React from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport EmailIcon from \"@material-ui/icons/Email\";\n\n\nconst removeArrayItem = (id) => {\n  console.log(\"ID: \", id);\n};\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderAdminEmails = ({\n  fields,\n  meta: { touched, error, submitFailed },\n  input,\n}) => (\n  <List style={{ maxWidth: 360, marginTop: \"27px\", marginBottom: \"27px\" }}>\n    {fields.map((adminEmail, index) => (\n      <li key={index} style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n        <Field\n          style={{ width: \"80%\", marginBottom: \".5rem\" }}\n          name={`${adminEmail}.adminEmail`}\n          type=\"email\"\n          component={renderTextField}\n          label=\"Admin Email\"\n          {...input}\n        />\n        <Button\n          style={{\n            width: \"5%\",\n            padding: 0,\n            minWidth: 25,\n            marginBottom: \".5rem\",\n          }}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => fields.remove(index)}\n        >\n          X\n        </Button>\n      </li>\n    ))}\n\n    <Button variant=\"contained\" onClick={() => fields.push({})}>\n      Add Admin Email\n    </Button>\n    {(touched || submitFailed) && error && <span>{error}</span>}\n  </List>\n);\n\nlet SettingsForm = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"maxGroupSize\"\n          component={renderTextField}\n          label=\"Max. Group Size\"\n          type=\"number\"\n          inputProps={{ min: 1 }}\n        />\n      </div>\n      <div>\n        <FieldArray name=\"adminEmail\" component={renderAdminEmails} />\n      </div>\n      {/* <div>\n        <Field\n          name=\"adminEmail\"\n          component={renderTextField}\n          type=\"email\"\n          label=\"Admin Email\"\n        />\n      </div> */}\n      <div>\n        <Field\n          name=\"signupMessage\"\n          component={renderTextField}\n          label=\"Signup Message\"\n          style={{ width: \"100%\" }}\n          multiline\n          rows={13}\n        />\n      </div>\n      <br />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n  const requiredFields = [\"groupName\", \"email\", \"groupSize\"];\n  requiredFields.forEach((field) => {\n    if (!formValues[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n  if (\n    formValues.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.email)\n  ) {\n    errors.email = \"Invalid email address\";\n  }\n  return errors;\n};\n\nSettingsForm = reduxForm({\n  form: \"settings\",\n  validate,\n})(SettingsForm);\n\nexport default SettingsForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport SettingsForm from \"./SettingsForm/SettingsForm\";\nimport { fetchChurchSettings, updateChurchSettings } from \"../../store/actions/index\";\n\nconst Settings = (props) => {\n  React.useEffect(() => {\n    props.fetchChurchSettings();\n  }, []);\n\n  const onSubmit = (formValues) => {\n    props.updateChurchSettings(formValues);\n  };\n\n  let form = <div>Loading...</div>;\n\n  if (props.church.adminEmail.length > 0) {\n    form = <SettingsForm initialValues={props.church} onSubmit={onSubmit} />;\n  }\n\n  return (\n    <div>\n      <h2>Settings</h2>\n      {form}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    church: state.church,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchChurchSettings, updateChurchSettings })(Settings);\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { fetchMaxGroupSize } from \"./store/actions/index\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport EventList from \"./containers/EventList/EventList\";\nimport EventCreate from \"./containers/EventCreate/EventCreate\";\nimport EventReserve from \"./containers/EventReserve/EventReserve\";\nimport EventDelete from \"./containers/EventDelete/EventDelete\";\nimport EventEdit from \"./containers/EventEdit/EventEdit\";\nimport ReservationList from \"./containers/Reservations/ReservationList\";\nimport Reservations from \"./containers/Reservations/Reservations\";\nimport ReservationEdit from \"./containers/Reservations/ReservationEdit\";\nimport Settings from \"./containers/Settings/Settings\"\n\nconst App = (props) => {\n  useEffect(() => {\n    props.fetchMaxGroupSize();\n  }, []);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/\" exact component={EventList} />\n      <Route path=\"/reserve/:id\" exact component={EventReserve} />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact render={(props) => <EventList isAuth={true} />} />\n        <Route path=\"/event-create\" component={EventCreate} />\n        <Route path=\"/events/edit/:id\" component={EventEdit} />\n        <Route path=\"/events/delete/:id\" component={EventDelete} />\n        <Route path=\"/reservations\" exact component={ReservationList} />\n        <Route path=\"/reservations/:id\" exact component={Reservations} />\n        <Route\n          path=\"/reservations/edit/:id\"\n          exact\n          component={ReservationEdit}\n        />\n        <Route path=\"/reserve/:id\" exact component={EventReserve} />\n        <Route path=\"/embed/reserve/:id\" exact component={EventReserve} />\n        <Route path=\"/settings\" exact component={Settings} />\n      </Switch>\n    );\n  }\n\n  return (\n    <div>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Layout>{routes}</Layout>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isSignedIn,\n    maxGroupSize: state.church.maxGroupSize,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, { fetchMaxGroupSize })(App));\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  maxGroupSize: null,\n  adminEmail: [],\n  adminFirstName: \"\",\n  adminLastName: \"\",\n  signupMessage: \"\"\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MAX_GROUP_SIZE:\n      return { ...state, maxGroupSize: action.payload[0].maxGroupSize, signupMessage: action.payload[0].signupMessage };\n    case actionTypes.FETCH_CHURCH_SETTINGS:\n      return {\n        ...state,\n        adminEmail: action.payload.adminEmail,\n        adminFirstName: action.payload.adminFirstName,\n        adminLastName: action.payload.adminLastName,\n        maxGroupSize: action.payload.maxGroupSize,\n        signupMessage: action.payload.signupMessage\n      };\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  events: [],\n  created: false,\n};\n\nconst eventReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_EVENTS:\n      return { ...state, events: action.payload, created: false };\n    case actionTypes.FETCH_EVENT:\n      if (state.events.length) {\n        return {\n          ...state,\n          events: state.events.map((event) =>\n            event._id === action.payload._id ? (event = action.payload) : event\n          ),\n        };\n      } else {\n        return { ...state, events: state.events.concat(action.payload) };\n      }\n\n    case actionTypes.CREATE_EVENT:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n        created: true,\n      };\n    case actionTypes.FETCH_POPULATED_EVENT:\n      return { ...state, events: action.payload };\n    case actionTypes.DELETE_EVENT:\n      return {\n        ...state,\n        events: state.events.filter((event) => event._id !== action.payload),\n      };\n    case actionTypes.EDIT_EVENT:\n      return {\n        ...state,\n        created: true,\n        events: state.events.filter((event) => event._id !== action.payload),\n      };\n    case actionTypes.DELETE_GROUP:\n      return {\n        ...state,\n        events: [action.payload.dbEvent]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  created: false,\n};\n\nconst groupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_GROUP_START:\n      return { ...state, created: false };\n    case actionTypes.CREATE_GROUP:\n      return { ...state, group: action.payload, created: true };\n    case actionTypes.EDIT_GROUP:\n      return { ...state, created: true };\n    case actionTypes.DELETE_GROUP:\n      return { ...state }\n    default:\n      return state;\n  }\n};\n\nexport default groupReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: {\n    adminOf: []\n  },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case actionTypes.SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: INITIAL_STATE.userId };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport churchReducer from \"./church\";\nimport eventReducer from \"./event\";\nimport groupReducer from \"./group\";\nimport authReducer from \"./auth\";\n\nexport default combineReducers({\n  auth: authReducer,\n  church: churchReducer,\n  event: eventReducer,\n  group: groupReducer,\n  form: formReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport reducers from \"./store/reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}