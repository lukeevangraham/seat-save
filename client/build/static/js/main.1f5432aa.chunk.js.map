{"version":3,"sources":["apis/seats.js","store/actions/actionTypes.js","store/actions/index.js","containers/GoogleAuth/GoogleAuth.js","hoc/Layout/Layout.js","components/EventTable/EventTable.js","containers/EventList/EventList.js","containers/EventCreate/EventForm/EventForm.js","containers/EventCreate/EventCreate.js","containers/EventReserve/ReserveForm/ReserveForm.js","components/GroupConfirm/GroupConfirm.js","containers/EventReserve/EventReserve.js","components/UI/Modal/Modal.js","containers/EventDelete/EventDelete.js","containers/EventEdit/EventEdit.js","containers/Reservations/ReservationList.js","components/ShowGroups/ShowGroups.js","containers/Reservations/Reservations.js","containers/Reservations/ReservationEdit.js","containers/Settings/SettingsForm/SettingsForm.js","containers/Settings/Settings.js","App.js","store/reducers/church.js","store/reducers/event.js","store/reducers/group.js","store/reducers/auth.js","store/reducers/index.js","index.js"],"names":["axios","create","baseURL","CREATE_EVENT","FETCH_EVENTS","FETCH_EVENT","DELETE_EVENT","EDIT_EVENT","CREATE_GROUP","EDIT_GROUP","DELETE_GROUP","CREATE_GROUP_START","SIGN_IN","SIGN_OUT","FETCH_MAX_GROUP_SIZE","FETCH_CHURCH_SETTINGS","fetchUpcomingEvents","async","response","seats","get","dispatch","type","actionTypes","payload","data","fetchEvent","id","concat","deleteEvent","delete","startCreateGroup","GoogleAuth","React","Component","constructor","arguments","onAuthChange","isSignedIn","this","auth","currentUser","getId","fullName","getBasicProfile","getName","givenName","getGivenName","familyName","getFamilyName","imageUrl","getImageUrl","email","getEmail","props","signIn","signOut","onSignInClick","onSignOutClick","adminRedirect","isAdmin","_jsx","Redirect","to","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","_jsxs","style","display","children","Button","component","RouterLink","color","SettingsIcon","onClick","render","connect","state","profile","post","console","log","errorMessage","alert","useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","Layout","classes","view","className","AppBar","margin","position","Toolbar","Typography","variant","Link","textDecoration","location","pathname","startsWith","_Fragment","Container","maxWidth","paper","top","left","transform","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","eventTable","modalOpen","modalSetOpen","useState","modalTitle","setModalTitle","modalContent","setModalContent","modalActions","setModalActions","modalBody","handleOpen","action","name","handleClose","deleteAndCloseModal","marginLeft","TableContainer","Paper","Modal","open","onClose","Table","TableHead","TableRow","TableCell","align","isAuth","TableBody","events","map","event","_id","eventName","Date","date","toLocaleDateString","weekday","toLocaleTimeString","timeStyle","openSpots","EditIcon","fontSize","DeleteIcon","useEffect","eventList","length","EventTable","renderTextField","_ref","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","renderDateAndTimeField","_ref2","InputLabelProps","shrink","reduxForm","form","handleSubmit","pristine","reset","submitting","onSubmit","Field","inputProps","created","createEvent","formValues","createdRedirect","Fragment","EventForm","renderCheckboxField","FormControl","FormGroup","FormControlLabel","control","Checkbox","checked","value","onChange","FormHelperText","ReserveForm","min","max","maxGroupSize","marginTop","FormLabel","signupMessage","origin","validate","errors","forEach","field","test","GroupConfirm","group","groupName","groupSize","toLocaleString","dateStyle","print","PrintIcon","mapStateToProps","ownProps","filter","match","params","church","createGroup","renderForm","paddingBottom","Math","dbGroup","rand","round","random","getModalStyle","SimpleModal","modalStyle","setOpen","body","content","editEvent","put","eventCopy","toString","split","toISOString","initialValues","renderList","admin","ShowGroups","groups","reduce","prev","next","note","fetchPopulatedEvent","deleteGroup","eventId","renderShowGroups","stripped","CSVLink","editGroup","difference","sizeDifference","renderAdminEmails","fields","submitFailed","List","adminEmail","index","alignItems","minWidth","remove","push","SettingsForm","FieldArray","multiline","rows","fetchChurchSettings","updateChurchSettings","withRouter","isAuthenticated","fetchMaxGroupSize","routes","Switch","Route","path","exact","EventList","EventReserve","EventCreate","EventEdit","EventDelete","ReservationList","Reservations","ReservationEdit","Settings","CssBaseline","INITIAL_STATE","adminFirstName","adminLastName","initialState","eventReducer","undefined","dbEvent","groupReducer","userId","adminOf","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","Provider","BrowserRouter","App","document","querySelector"],"mappings":"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","file":"static/js/main.1f5432aa.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: '/'\n})","export const CREATE_EVENT = \"CREATE_EVENT\";\nexport const FETCH_EVENTS = \"FETCH_EVENTS\";\nexport const FETCH_EVENT = \"FETCH_EVENT\";\nexport const FETCH_POPULATED_EVENT = \"FETCH_POPULATED_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\n\nexport const CREATE_GROUP = \"CREATE_GROUP\";\nexport const EDIT_GROUP = \"EDIT_GROUP\";\nexport const DELETE_GROUP = \"DELETE_GROUP\";\nexport const CREATE_GROUP_START = \"CREATE_GROUP_START\";\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\n\nexport const FETCH_MAX_GROUP_SIZE = \"FETCH_MAX_GROUP_SIZE\";\nexport const FETCH_CHURCH_SETTINGS = \"FETCH_CHURCH_SETTINGS\";\nexport const UPDATE_CHURCH_SETTINGS = \"UPDATE_CHURCH_SETTINGS\";\n","import seats from \"../../apis/seats\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const fetchMaxGroupSize = () => async (dispatch) => {\n  const response = await seats.get(`/church`);\n\n  dispatch({\n    type: actionTypes.FETCH_MAX_GROUP_SIZE,\n    payload: response.data,\n  });\n};\n\nexport const fetchChurchSettings = () => async (dispatch) => {\n  const response = await seats.get(`church/admin`);\n\n  dispatch({\n    type: actionTypes.FETCH_CHURCH_SETTINGS,\n    payload: response.data[0]\n  })\n};\n\nexport const updateChurchSettings = (formValues) => async (dispatch) => {\n  const response = await seats.put(`church/admin`, formValues);\n}\n\nexport const createEvent = (formValues) => async (dispatch) => {\n  const response = await seats.post(\"/event\", formValues);\n\n  dispatch({\n    type: actionTypes.CREATE_EVENT,\n    payload: response.data,\n  });\n};\n\nexport const fetchUpcomingEvents = () => async (dispatch) => {\n  const response = await seats.get(\"/event\");\n\n  dispatch({ type: actionTypes.FETCH_EVENTS, payload: response.data });\n};\n\nexport const fetchEvent = (id) => async (dispatch) => {\n  const response = await seats.get(`/event/${id}`);\n\n  dispatch({ type: actionTypes.FETCH_EVENT, payload: response.data });\n};\n\nexport const fetchPopulatedEvent = (id) => async (dispatch) => {\n  const response = await seats.get(`event/admin/${id}`);\n\n  dispatch({ type: actionTypes.FETCH_EVENTS, payload: response.data });\n};\n\nexport const deleteEvent = (id) => async (dispatch) => {\n  const response = await seats.delete(`event/${id}`);\n\n  dispatch({ type: actionTypes.DELETE_EVENT, payload: id });\n};\n\nexport const editEvent = (id, formValues) => async (dispatch) => {\n  const response = await seats.put(`event/${id}`, formValues);\n\n  dispatch({ type: actionTypes.EDIT_EVENT, payload: response.data });\n};\n\nexport const startCreateGroup = () => {\n  return {\n    type: actionTypes.CREATE_GROUP_START,\n  };\n};\n\nexport const createGroup = (id, formValues) => async (dispatch) => {\n  const response = await seats.post(`/group/${id}`, formValues);\n\n  dispatch({\n    type: actionTypes.CREATE_GROUP,\n    payload: response.data,\n  });\n};\n\nexport const editGroup = (id, formValues) => async (dispatch) => {\n  const response = await seats.put(`/group/${id}`, formValues);\n\n  dispatch({\n    type: actionTypes.EDIT_GROUP,\n    payload: response.data,\n  });\n};\n\nexport const deleteGroup = (id, groupSize, eventId) => async (dispatch) => {\n  const response = await seats.delete(`/group/${id}/${groupSize}/${eventId}`);\n\n  dispatch({\n    type: actionTypes.DELETE_GROUP,\n    payload: response.data,\n  });\n};\n\nexport const signIn = (profile) => async (dispatch) => {\n  const response = await seats.post(\"/user\", profile);\n\n  if (response.data.email) {\n    dispatch({\n      type: actionTypes.SIGN_IN,\n      payload: response.data,\n    });\n  } else {\n    console.log(\"RES REAL: \", response.data.errorMessage);\n    alert(response.data.errorMessage);\n    dispatch({\n      type: actionTypes.SIGN_OUT,\n      payload: response.data,\n    });\n  }\n};\n\nexport const signOut = () => {\n  return {\n    type: actionTypes.SIGN_OUT,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, Link as RouterLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport { signIn, signOut } from \"../../store/actions\";\nimport Button from \"@material-ui/core/Button\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"666797596660-g0ss4568pfnjesar12r2n0irheeg92n1.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      // console.log(\"HERE: \", this.auth.currentUser.get().getBasicProfile().getName())\n      // const profile = this.auth.currentUser.get().getBasicProfile();\n      const id = this.auth.currentUser.get().getId();\n      const fullName = this.auth.currentUser.get().getBasicProfile().getName();\n      const givenName = this.auth.currentUser.get().getBasicProfile().getGivenName();\n      const familyName = this.auth.currentUser.get().getBasicProfile().getFamilyName();\n      const imageUrl = this.auth.currentUser.get().getBasicProfile().getImageUrl();\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\n      this.props.signIn({\n        id,\n        fullName,\n        givenName,\n        familyName,\n        imageUrl,\n        email,\n      });\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <div style={{ display: \"flex\" }}>\n          {/* <Link color=\"default\" variant=\"inherit\" to={\"/event-create\"} component={RouterLink}> */}\n          <Button component={RouterLink} to=\"/event-create\" color=\"inherit\">\n            Create Event\n          </Button>\n          {/* </Link> */}\n\n          {/* <Link to={\"/settings\"} component={RouterLink}> */}\n          <Button color=\"inherit\" component={RouterLink} to=\"/settings\">\n            <SettingsIcon />\n          </Button>\n          {/* </Link> */}\n\n          <div onClick={this.onSignOutClick}>\n            <Button color=\"inherit\">Sign Out</Button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={this.onSignInClick}>\n          <Button color=\"inherit\">Admin</Button>\n        </div>\n      );\n    }\n  }\n\n  adminRedirect = this.props.isAdmin ? <Redirect to=\"/admin\" /> : null;\n\n  render() {\n    return (\n      <div>\n        {this.adminRedirect}\n        {this.renderAuthButton()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    // isAdmin: state.auth.userId.adminOf.length > 0,\n  };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport GoogleAuth from \"../../containers/GoogleAuth/GoogleAuth\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: \"2rem\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Layout = (props) => {\n  const classes = useStyles();\n\n  let view = (\n    // <>\n    <div className={classes.root}>\n      <AppBar style={{ margin: 0 }} position=\"static\">\n        <Toolbar>\n          {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link\n              component={RouterLink}\n              style={{ color: \"#fff\", textDecoration: \"none\" }}\n              to=\"/\"\n            >\n              <strong>SeatSave</strong> | San Pedro Presbyterian Church\n            </Link>\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n          <GoogleAuth />\n        </Toolbar>\n      </AppBar>\n    </div>\n    //   <div>\n    //     <h1>\n    //       <Link component={RouterLink} to=\"/\">\n    //         RB Community Church | Seat Save\n    //       </Link>\n    //     </h1>\n    //   </div>\n    // </>\n  );\n\n  if (window.location.pathname.startsWith(\"/embed\")) {\n    view = <div></div>;\n  }\n\n  return (\n    <>\n      {view}\n      <Container maxWidth=\"md\">\n        <main>{props.children}</main>\n      </Container>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Link from \"@material-ui/core/Link\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst eventTable = (props) => {\n  const classes = useStyles();\n  const [modalOpen, modalSetOpen] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(\"\");\n  const [modalActions, setModalActions] = useState(\"\");\n\n  let modalBody = (\n    <div className={classes.paper}>\n      <h2>{modalTitle}</h2>\n      <p>{modalContent}</p>\n      <div>{modalActions}</div>\n    </div>\n  );\n\n  const deleteAndCloseModal = (id) => {\n    props.delete(id);\n    handleClose();\n  };\n\n  const handleOpen = (action, id, name) => {\n    if (action === \"del\") {\n      setModalTitle(\"Delete Event\");\n      setModalContent(\n        `Are you sure you want to delete this event named: ${name}`\n      );\n      setModalActions(\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => deleteAndCloseModal(id)}\n          >\n            Delete\n          </Button>\n          <Button style={{ marginLeft: \"1rem\" }} variant=\"contained\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </div>\n      );\n    }\n    modalSetOpen(true);\n  };\n\n  const handleClose = () => {\n    modalSetOpen(false);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Modal\n        open={modalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"delete-event-confirmation\"\n        aria-describedby=\"delete-event-confirm\"\n      >\n        {modalBody}\n      </Modal>\n      <Table aria-label=\"event table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Event</TableCell>\n            <TableCell align=\"right\">Day</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Time</TableCell>\n            <TableCell align=\"right\">Open Spots</TableCell>\n            {props.isAuth ? <><TableCell align=\"right\">Admin</TableCell><TableCell align=\"right\">Groups</TableCell></> : null}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.events.map((event) => (\n            <TableRow key={event._id}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link component={RouterLink} to={`/reserve/${event._id}`}>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Reserve\n                  </Button>\n                </Link>\n              </TableCell>\n              <TableCell>{event.eventName}</TableCell>\n              <TableCell align=\"right\">\n                {new Date(event.date).toLocaleDateString(\"us-en\", {\n                  weekday: \"short\",\n                })}\n              </TableCell>\n              <TableCell align=\"right\">\n                {new Date(event.date).toLocaleDateString()}\n              </TableCell>\n              <TableCell align=\"right\">\n                {new Date(event.date).toLocaleTimeString([], {\n                  timeStyle: \"short\",\n                })}\n              </TableCell>\n              <TableCell align=\"right\">{event.openSpots}</TableCell>\n              {/* {props.isAuth ? <TableCell align=\"right\"> <EditIcon fontSize=\"small\" /> <DeleteIcon onClick={() => props.delete(event._id)} fontSize=\"small\" /> </TableCell> : null } */}\n              {props.isAuth ? (\n                <>\n                <TableCell align=\"right\">\n                  {\" \"}\n                  <Link\n                    component={RouterLink}\n                    to={`/events/edit/${event._id}`}\n                    color=\"textPrimary\"\n                  >\n                    <EditIcon fontSize=\"small\" />\n                  </Link>\n                  <Link component={RouterLink} to=\"#\" color=\"textPrimary\">\n                    <DeleteIcon\n                      style={{ marginLeft: 5 }}\n                      fontSize=\"small\"\n                      onClick={() =>\n                        handleOpen(\"del\", event._id, event.eventName)\n                      }\n                    />\n                  </Link>\n                </TableCell>\n                <TableCell align=\"right\"><Link component={RouterLink} to={`/reservations/${event._id}`}>View</Link></TableCell>\n                </>\n              ) : null}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default eventTable;\n","import React, { useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\"\nimport { connect } from \"react-redux\";\nimport { fetchUpcomingEvents, deleteEvent } from \"../../store/actions/index\";\n\nimport EventTable from \"../../components/EventTable/EventTable\";\n\nconst EventList = (props) => {\n  useEffect(() => {\n    props.fetchUpcomingEvents();\n  }, [props.fetchUpcomingEvents]);  \n\n  let eventList = <div>Loading...</div>;\n\n  if (props.events.events.length) {\n    eventList = <EventTable events={props.events.events} isAuth={props.isAuth} delete={props.deleteEvent} />\n  }\n\n  return (\n    <div>\n      <h2>Event List</h2>\n      {eventList}\n      <br />\n      <br />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    events: state.event,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUpcomingEvents, deleteEvent })(EventList);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderDateAndTimeField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    id=\"datetime-local\"\n    label={label}\n    type=\"datetime-local\"\n    InputLabelProps={{ shrink: true }}\n    {...input}\n    {...custom}\n  />\n);\n\nconst EventForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"eventName\"\n          component={renderTextField}\n          label=\"Event Name\"\n        />\n      </div>\n      <br />\n      <div>\n        <Field\n          name=\"date\"\n          component={renderDateAndTimeField}\n          label=\"Event Date & Time\"\n        />\n      </div>\n      <br />\n      <div>\n        <Field\n          name=\"openSpots\"\n          component={renderTextField}\n          type=\"number\"\n          label=\"Open Spots\"\n          inputProps={{ \"min\": 0 }}\n        />\n      </div>\n      <br />\n      <br />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"event\",\n})(EventForm);\n","import React, { useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createEvent, startCreateGroup } from \"../../store/actions\";\nimport EventForm from \"./EventForm/EventForm\";\n\nconst EventCreate = (props) => {\n  useEffect(() => {\n    props.startCreateGroup()\n  }, [props.startCreateGroup])\n\n  const onSubmit = (formValues) => {\n    props.createEvent(formValues);\n  };\n\n  const createdRedirect = props.created ? <Redirect to=\"/\" /> : null;\n\n  return (\n    <React.Fragment>\n      {createdRedirect}\n      <h2>Create An Event:</h2>\n      <EventForm onSubmit={onSubmit} />\n      <br />\n      <br />\n      <br />\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    created: state.event.created,\n  };\n};\n\nexport default connect(mapStateToProps, { createEvent, startCreateGroup })(EventCreate);\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\nimport Link from \"@material-ui/core/Link\";\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderCheckboxField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <FormControl error={touched && invalid} component=\"fieldset\">\n    {console.log(\"ERR: \", error)}\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={input.value ? true : false}\n            onChange={input.onChange}\n            {...custom}\n            {...input}\n          />\n        }\n        label={label}\n      />\n    </FormGroup>\n    <FormHelperText>{touched && error}</FormHelperText>\n  </FormControl>\n);\n\nlet ReserveForm = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"groupName\"\n          component={renderTextField}\n          label=\"Group Name\"\n        />\n      </div>\n      <div>\n        <Field\n          name=\"email\"\n          component={renderTextField}\n          type=\"email\"\n          label=\"Email\"\n          style={{ width: \"300px\" }}\n        />\n      </div>\n      <div>\n        <Field\n          name=\"groupSize\"\n          component={renderTextField}\n          type=\"number\"\n          label=\"How Many People in Your Group?\"\n          inputProps={{ min: 1, max: props.maxGroupSize }}\n          style={{ width: \"300px\" }}\n        />\n      </div>\n      {props.auth ? (\n        <div>\n          <Field name=\"note\" component={renderTextField} label=\"Note\" />\n        </div>\n      ) : null}\n      <br />\n      <div style={{ marginTop: \"1rem\" }}>\n        <FormLabel>Please read and check the following</FormLabel>\n        <br />\n        <Field\n          name=\"willAbide\"\n          component={renderCheckboxField}\n          label=\"I will abide by San Pedro best safety practices\"\n        />\n      </div>\n      <p>{props.signupMessage}</p>\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n      {props.auth && !window.location.pathname.startsWith(\"/embed\") ? (\n        <div style={{ marginTop: \"2rem\", width: \"80%\", padding: 8 }}>\n          {/* <Link component={RouterLink} to={`/embed/reserve/${props.event._id}`}>\n            Embeddable form\n          </Link> */}\n          <div>\n            <strong>Form Embed Code:</strong>\n          </div>\n          <div style={{ backgroundColor: \"#eee\", padding: 8 }}>\n            {/* <pre> */}\n            &lt;iframe src=\"{window.location.origin}/embed/reserve/\n            {props.event._id}\" title=\"Event Registration Form\" width=\"100%\"\n            height=\"700px\" style=\"padding:30px; border:none;\"&gt;&lt;/iframe&gt;\n            {/* </pre> */}\n          </div>\n        </div>\n      ) : null}\n      {/* <Button style={{ marginLeft: \"1rem\" }} variant=\"contained\" color=\"default\">\n        Cancel\n      </Button> */}\n    </form>\n  );\n};\n\nconst validate = (formValues) => {\n  console.log(\"VALUES \", formValues);\n  const errors = {};\n  const requiredFields = [\n    \"groupName\",\n    \"email\",\n    \"groupSize\",\n    \"willAbide\",\n  ];\n  requiredFields.forEach((field) => {\n    if (!formValues[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n  if (\n    formValues.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.email)\n  ) {\n    errors.email = \"Invalid email address\";\n  }\n  return errors;\n};\n\nReserveForm = reduxForm({\n  form: \"reserve\",\n  validate,\n})(ReserveForm);\n\nexport default ReserveForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport PrintIcon from \"@material-ui/icons/Print\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nconst GroupConfirm = (props) => (\n  <div>\n    <h3>Reservation Confirmation</h3>\n    {console.log(\"GROUP: \", props.group)}\n    {console.log(\"EVENT: \", props.event[0])}\n    <div>\n      <strong>Group Name: </strong>\n      {props.group.groupName} <br />\n      <strong>Group Size: </strong>\n      {props.group.groupSize} <br />\n      <strong>Email: </strong>\n      {props.group.email} <br />\n      <strong>Event Name: </strong>\n      {props.event[0].eventName} <br />\n      <strong>Event Date: </strong>\n      {new Date(props.event[0].date).toLocaleDateString(\"en-us\")} <br />\n      <strong>Event Time: </strong>\n      {new Date(props.event[0].date).toLocaleTimeString(\"en-us\", {\n        timeStyle: \"short\",\n      })}{\" \"}\n      <br />\n      <br />\n      <strong>\n        Time Reservation Made:{\" \"}\n        {new Date().toLocaleString(\"en-us\", {\n          dateStyle: \"short\",\n          timeStyle: \"short\",\n        })}\n      </strong>\n      <br />\n      <br />\n      <hr />\n      <br />\n      <div>The above details have been sent to you.</div>\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => window.print()}><PrintIcon />Print</Button>\n      {/* {\"  \"}\n      <Link to=\"/\"><Button variant=\"contained\" color=\"primary\"><CloseIcon />Close</Button></Link> */}\n    </div>\n  </div>\n);\n\nexport default GroupConfirm;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvent, createGroup, startCreateGroup } from \"../../store/actions\";\n\nimport ReserveForm from \"./ReserveForm/ReserveForm\";\nimport GroupConfirm from \"../../components/GroupConfirm/GroupConfirm\";\n\nconst EventReserve = (props) => {\n  useEffect(() => {\n    props.fetchEvent(props.match.params.id);\n\n    // calculate maxGroupSize accomadating for available spots\n    // console.log( Math.min(props.maxGroupSize, props.event[0].openSpots))\n\n    return () => props.startCreateGroup();\n  }, [props.fetchEvent]);\n\n  const onSubmit = (formValues) => {\n    props.createGroup(props.match.params.id, formValues);\n  };\n\n  // const createdRedirect = props.created ? <GroupConfirm /> : null;\n\n  let renderForm = <div>Loading ...</div>;\n\n  if (props.event.length > 0) {\n    renderForm = (\n      <div style={{ paddingBottom: \"1rem\" }}>\n        <h2>RSVP</h2>\n        <h4>\n          {props.event[0].eventName} -{\" \"}\n          {new Date(props.event[0].date).toLocaleDateString(\"us-en\", {\n            weekday: \"short\",\n          })}\n          {\", \"}\n          {new Date(props.event[0].date).toLocaleString(\"en-us\", {\n            dateStyle: \"short\",\n            timeStyle: \"short\",\n          })}\n        </h4>\n\n        <ReserveForm\n          onSubmit={onSubmit}\n          event={props.event[0]}\n          auth={props.isSignedIn}\n          maxGroupSize={Math.min(props.maxGroupSize, props.event[0].openSpots)}\n          signupMessage={props.signupMessage}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {/* {createdRedirect} */}\n      {!props.created ? (\n        renderForm\n      ) : (\n        <GroupConfirm group={props.group.dbGroup} event={props.event} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    event: state.event.events.filter(\n      (event) => event._id === ownProps.match.params.id\n    ),\n    created: state.group.created,\n    group: state.group.group,\n    isSignedIn: state.auth.isSignedIn,\n    maxGroupSize: state.church.maxGroupSize,\n    signupMessage: state.church.signupMessage,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvent,\n  createGroup,\n  startCreateGroup,\n})(EventReserve);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p>\n      <SimpleModal />\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import { PromiseProvider } from \"mongoose\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport SimpleModal from \"../../components/UI/Modal/Modal\";\nimport Button from \"@material-ui/core/Button\"\nimport { fetchEvent, deleteEvent } from \"../../store/actions\";\n\nconst EventDelete = (props) => {\n  useEffect(() => {\n    props.fetchEvent(props.match.params.id)\n  }, []);\n\n  const renderContent = () => \"Are you sure you want to delete this event?\"\n\n  const renderActions = (props) => (\n    <React.Fragment>\n      <Button variant=\"contained\" color=\"secondary\">DELETE</Button>\n    </React.Fragment>\n  )\n\n  return (\n    <SimpleModal title={`Delete ${props.event.eventName}`} content={renderContent()} />\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return { event: state.event.events }\n}\n\nexport default connect(mapStateToProps, { fetchEvent, deleteEvent })(EventDelete);\n","import _ from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvent, editEvent } from \"../../store/actions/index\";\nimport EventForm from \"../EventCreate/EventForm/EventForm\";\n\nconst EventEdit = (props) => {\n  useEffect(() => {\n    props.fetchEvent(props.match.params.id);\n  }, [props.fetchEvent]);\n\n  const onSubmit = (formValues) => {\n    props.editEvent(props.match.params.id, formValues);\n  };\n\n  const createdRedirect = props.created ? <Redirect to=\"/\" /> : null;\n\n  let form = <p>Hello</p>;\n\n  if ((props.event.length = 1)) {\n    let eventCopy = props.event[0];\n    eventCopy ? (eventCopy.date = new Date(new Date(eventCopy.date).toString().split('GMT')[0]+' UTC').toISOString().split('.')[0]) : null;\n\n    form = <EventForm initialValues={props.event[0]} onSubmit={onSubmit} />;\n  }\n\n  return (\n    <div>\n      {createdRedirect}\n      <h2>Event Edit</h2>\n      {form}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    event: state.event.events.filter(\n      (event) => event._id === ownProps.match.params.id\n    ),\n    created: state.event.created,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchEvent, editEvent })(EventEdit);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUpcomingEvents } from \"../../store/actions/index\";\n\nimport EventTable from \"../../components/EventTable/EventTable\";\n\nconst ReservationList = (props) => {\n  useEffect(() => {\n    props.fetchUpcomingEvents();\n  }, [props.fetchUpcomingEvents]);\n\n  let renderList = <div>Loading...</div>;\n\n  if (props.events.length > 0) {\n    renderList = <EventTable events={props.events} admin={true} />;\n  }\n\n  return (\n    <div>\n      <h2>Reservation List</h2>\n\n      {renderList}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { events: state.event.events };\n};\n\nexport default connect(mapStateToProps, { fetchUpcomingEvents })(\n  ReservationList\n);\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst ShowGroups = (props) => {\n  const classes = useStyles();\n  const [modalOpen, modalSetOpen] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(\"\");\n  const [modalActions, setModalActions] = useState(\"\");\n\n  let modalBody = (\n    <div className={classes.paper}>\n      <h2>{modalTitle}</h2>\n      <p>{modalContent}</p>\n      <div>{modalActions}</div>\n    </div>\n  );\n\n  const deleteAndCloseModal = (id, groupSize) => {\n    props.delete(id, groupSize, props.event[0]._id);\n    handleClose();\n  };\n\n  const handleOpen = (action, id, name, groupSize) => {\n    if (action === \"del\") {\n      setModalTitle(\"Delete Group\");\n      setModalContent(\n        `Are you sure you want to delete this group named: ${name}`\n      );\n      setModalActions(\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => deleteAndCloseModal(id, groupSize)}\n          >\n            Delete\n          </Button>\n          <Button\n            style={{ marginLeft: \"1rem\" }}\n            variant=\"contained\"\n            onClick={handleClose}\n          >\n            Cancel\n          </Button>\n        </div>\n      );\n    }\n    modalSetOpen(true);\n  };\n\n  const handleClose = () => {\n    modalSetOpen(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        open={modalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"delete-group-confirmation\"\n        aria-describedby=\"delete-group-confirm\"\n      >\n        {modalBody}\n      </Modal>\n      <h3>\n        Groups for: {props.event[0].eventName} -{\" \"}\n        {new Date(props.event[0].date).toLocaleString()}\n      </h3>\n      <h4>\n        {props.event[0].groups.length > 0\n          ? props.event[0].groups\n              .map((group) => group.groupSize)\n              .reduce((prev, next) => prev + next) + \" Reservations\"\n          : null}{\" \"}\n      </h4>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"group table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Group</TableCell>\n              <TableCell align=\"right\">Quantity</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Note</TableCell>\n              <TableCell align=\"right\">Edit</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.event[0].groups.map((group) => (\n              <TableRow key={group._id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {group.groupName}\n                </TableCell>\n                <TableCell align=\"right\">{group.groupSize}</TableCell>\n                <TableCell align=\"right\">{group.email}</TableCell>\n                <TableCell align=\"right\">{group.note}</TableCell>\n                <TableCell align=\"right\">\n                  <Link\n                    component={RouterLink}\n                    to={`/reservations/edit/${group._id}`}\n                    color=\"textPrimary\"\n                  >\n                    <EditIcon fontSize=\"small\" />\n                  </Link>\n                  <Link component={RouterLink} to=\"#\" color=\"textPrimary\">\n                    <DeleteIcon\n                      style={{ marginLeft: 5 }}\n                      fontSize=\"small\"\n                      onClick={() =>\n                        handleOpen(\n                          \"del\",\n                          group._id,\n                          group.groupName,\n                          group.groupSize\n                        )\n                      }\n                    />\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default ShowGroups;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { fetchPopulatedEvent, deleteGroup } from \"../../store/actions/index\";\n\nimport ShowGroups from \"../../components/ShowGroups/ShowGroups\";\n\nconst Reservations = (props) => {\n  useEffect(() => {\n    props.fetchPopulatedEvent(props.match.params.id);\n  }, [props.fetchEvent]);\n\n  let renderShowGroups = <div>Loading...</div>;\n\n  if (props.event[0]) {\n    if (props.event[0].groups) {\n      const stripped = props.event[0].groups.map((group) =>\n        (({ groupName, email, groupSize }) => ({\n          groupName,\n          email,\n          groupSize,\n        }))(group)\n      );\n      renderShowGroups = (\n        <>\n          <ShowGroups event={props.event} delete={props.deleteGroup} />\n          <br />\n          <CSVLink\n            style={{ marginTop: \"1rem\", marginBottom: \"20px\" }}\n            data={stripped}\n          >\n            Export As CSV\n          </CSVLink>\n          <br />\n          <br />\n          <br />\n        </>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h2>Reservations</h2>\n      {renderShowGroups}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    event: state.event.events,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchPopulatedEvent, deleteGroup })(\n  Reservations\n);\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ReserveForm from \"../EventReserve/ReserveForm/ReserveForm\";\nimport { connect } from \"react-redux\";\nimport { editGroup, startCreateGroup } from \"../../store/actions/index\";\n\nconst ReservationEdit = (props) => {\n  useEffect(() => {\n    return () => props.startCreateGroup();\n  }, [])\n\n  const onSubmit = (formValues) => {\n    // Calculate change in available seats for the event\n    const oldGroupSize = props.group[0].groupSize;\n    const newGroupSize = formValues.groupSize;\n    const difference = oldGroupSize - newGroupSize;\n\n    formValues.eventId = props.eventId;\n    formValues.sizeDifference = difference;\n    props.editGroup(props.match.params.id, formValues);\n  };\n\n  const createdRedirect = props.created ? <Redirect to=\"/\" /> : null;\n\n  return (\n    <div>\n      {createdRedirect}\n      <h2>Reservation Edit</h2>\n      <ReserveForm\n        initialValues={props.group[0]}\n        auth={props.isSignedIn}\n        onSubmit={onSubmit}\n        event={props.event}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    group: state.event.events[0].groups.filter(\n      (group) => group._id === ownProps.match.params.id\n    ),\n    isSignedIn: state.auth.isSignedIn,\n    eventId: state.event.events[0]._id,\n    created: state.group.created,\n    event: state.event.events[0]\n  };\n};\n\nexport default connect(mapStateToProps, { startCreateGroup, editGroup })(ReservationEdit);\n","import React from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport EmailIcon from \"@material-ui/icons/Email\";\n\n\nconst removeArrayItem = (id) => {\n  console.log(\"ID: \", id);\n};\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst renderAdminEmails = ({\n  fields,\n  meta: { touched, error, submitFailed },\n  input,\n}) => (\n  <List style={{ maxWidth: 360, marginTop: \"27px\", marginBottom: \"27px\" }}>\n    {fields.map((adminEmail, index) => (\n      <li key={index} style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n        <Field\n          style={{ width: \"80%\", marginBottom: \".5rem\" }}\n          name={`${adminEmail}.adminEmail`}\n          type=\"email\"\n          component={renderTextField}\n          label=\"Admin Email\"\n          {...input}\n        />\n        <Button\n          style={{\n            width: \"5%\",\n            padding: 0,\n            minWidth: 25,\n            marginBottom: \".5rem\",\n          }}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => fields.remove(index)}\n        >\n          X\n        </Button>\n      </li>\n    ))}\n\n    <Button variant=\"contained\" onClick={() => fields.push({})}>\n      Add Admin Email\n    </Button>\n    {(touched || submitFailed) && error && <span>{error}</span>}\n  </List>\n);\n\nlet SettingsForm = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"maxGroupSize\"\n          component={renderTextField}\n          label=\"Max. Group Size\"\n          type=\"number\"\n          inputProps={{ min: 1 }}\n        />\n      </div>\n      <div>\n        <FieldArray name=\"adminEmail\" component={renderAdminEmails} />\n      </div>\n      {/* <div>\n        <Field\n          name=\"adminEmail\"\n          component={renderTextField}\n          type=\"email\"\n          label=\"Admin Email\"\n        />\n      </div> */}\n      <div>\n        <Field\n          name=\"signupMessage\"\n          component={renderTextField}\n          label=\"Signup Message\"\n          style={{ width: \"100%\" }}\n          multiline\n          rows={13}\n        />\n      </div>\n      <br />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n  const requiredFields = [\"groupName\", \"email\", \"groupSize\"];\n  requiredFields.forEach((field) => {\n    if (!formValues[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n  if (\n    formValues.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.email)\n  ) {\n    errors.email = \"Invalid email address\";\n  }\n  return errors;\n};\n\nSettingsForm = reduxForm({\n  form: \"settings\",\n  validate,\n})(SettingsForm);\n\nexport default SettingsForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport SettingsForm from \"./SettingsForm/SettingsForm\";\nimport { fetchChurchSettings, updateChurchSettings } from \"../../store/actions/index\";\n\nconst Settings = (props) => {\n  React.useEffect(() => {\n    props.fetchChurchSettings();\n  }, []);\n\n  const onSubmit = (formValues) => {\n    props.updateChurchSettings(formValues);\n  };\n\n  let form = <div>Loading...</div>;\n\n  if (props.church.adminEmail.length > 0) {\n    form = <SettingsForm initialValues={props.church} onSubmit={onSubmit} />;\n  }\n\n  return (\n    <div>\n      <h2>Church Settings</h2>\n      {form}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    church: state.church,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchChurchSettings, updateChurchSettings })(Settings);\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { fetchMaxGroupSize } from \"./store/actions/index\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport EventList from \"./containers/EventList/EventList\";\nimport EventCreate from \"./containers/EventCreate/EventCreate\";\nimport EventReserve from \"./containers/EventReserve/EventReserve\";\nimport EventDelete from \"./containers/EventDelete/EventDelete\";\nimport EventEdit from \"./containers/EventEdit/EventEdit\";\nimport ReservationList from \"./containers/Reservations/ReservationList\";\nimport Reservations from \"./containers/Reservations/Reservations\";\nimport ReservationEdit from \"./containers/Reservations/ReservationEdit\";\nimport Settings from \"./containers/Settings/Settings\"\n\nconst App = (props) => {\n  useEffect(() => {\n    props.fetchMaxGroupSize();\n  }, []);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/\" exact component={EventList} />\n      <Route path=\"/reserve/:id\" exact component={EventReserve} />\n      <Route path=\"/embed/reserve/:id\" exact component={EventReserve} />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact render={(props) => <EventList isAuth={true} />} />\n        <Route path=\"/event-create\" component={EventCreate} />\n        <Route path=\"/events/edit/:id\" component={EventEdit} />\n        <Route path=\"/events/delete/:id\" component={EventDelete} />\n        <Route path=\"/reservations\" exact component={ReservationList} />\n        <Route path=\"/reservations/:id\" exact component={Reservations} />\n        <Route\n          path=\"/reservations/edit/:id\"\n          exact\n          component={ReservationEdit}\n        />\n        <Route path=\"/reserve/:id\" exact component={EventReserve} />\n        <Route path=\"/embed/reserve/:id\" exact component={EventReserve} />\n        \n        <Route path=\"/settings\" exact component={Settings} />\n      </Switch>\n    );\n  }\n\n  return (\n    <div>\n      <CssBaseline />\n        <Layout>{routes}</Layout>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isSignedIn,\n    maxGroupSize: state.church.maxGroupSize,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, { fetchMaxGroupSize })(App));\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  maxGroupSize: null,\n  adminEmail: [],\n  adminFirstName: \"\",\n  adminLastName: \"\",\n  signupMessage: \"\"\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MAX_GROUP_SIZE:\n      return { ...state, maxGroupSize: action.payload[0].maxGroupSize, signupMessage: action.payload[0].signupMessage };\n    case actionTypes.FETCH_CHURCH_SETTINGS:\n      return {\n        ...state,\n        adminEmail: action.payload.adminEmail,\n        adminFirstName: action.payload.adminFirstName,\n        adminLastName: action.payload.adminLastName,\n        maxGroupSize: action.payload.maxGroupSize,\n        signupMessage: action.payload.signupMessage\n      };\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  events: [],\n  created: false,\n};\n\nconst eventReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_EVENTS:\n      return { ...state, events: action.payload, created: false };\n    case actionTypes.FETCH_EVENT:\n      if (state.events.length) {\n        return {\n          ...state,\n          events: state.events.map((event) =>\n            event._id === action.payload._id ? (event = action.payload) : event\n          ),\n        };\n      } else {\n        return { ...state, events: state.events.concat(action.payload) };\n      }\n\n    case actionTypes.CREATE_EVENT:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n        created: true,\n      };\n    case actionTypes.FETCH_POPULATED_EVENT:\n      return { ...state, events: action.payload };\n    case actionTypes.DELETE_EVENT:\n      return {\n        ...state,\n        events: state.events.filter((event) => event._id !== action.payload),\n      };\n    case actionTypes.EDIT_EVENT:\n      return {\n        ...state,\n        created: true,\n        events: state.events.filter((event) => event._id !== action.payload),\n      };\n    case actionTypes.DELETE_GROUP:\n      return {\n        ...state,\n        events: [action.payload.dbEvent]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  created: false,\n};\n\nconst groupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_GROUP_START:\n      return { ...state, created: false };\n    case actionTypes.CREATE_GROUP:\n      return { ...state, group: action.payload, created: true };\n    case actionTypes.EDIT_GROUP:\n      return { ...state, created: true };\n    case actionTypes.DELETE_GROUP:\n      return { ...state }\n    default:\n      return state;\n  }\n};\n\nexport default groupReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  isSignedIn: true,\n  userId: {\n    adminOf: []\n  },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case actionTypes.SIGN_OUT:\n      return { ...state, isSignedIn: true, userId: INITIAL_STATE.userId };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport churchReducer from \"./church\";\nimport eventReducer from \"./event\";\nimport groupReducer from \"./group\";\nimport authReducer from \"./auth\";\n\nexport default combineReducers({\n  auth: authReducer,\n  church: churchReducer,\n  event: eventReducer,\n  group: groupReducer,\n  form: formReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport reducers from \"./store/reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}